# docker-compose.dev.yml

version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: chordatlas-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: chordatlas
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    image: node:20-bullseye-slim
    container_name: chordatlas-backend
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./backend:/app
      - /app/node_modules
    expose:
      - "5000"
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: root
      DB_PASS: rootpass
      DB_NAME: chordatlas
    depends_on:
      - db

  frontend:
    image: node:20-bullseye-slim
    container_name: chordatlas-frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_FORCE_POLLING=true
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    container_name: chordatlas-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro

  adminer:
    image: adminer:latest
    container_name: chordatlas-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db

volumes:
  db_data:
